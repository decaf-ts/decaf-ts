{
  "name": "@decaf-ts/decaf-ts",
  "version": "0.0.3",
  "description": "Workspace for decaf-ts (is almost) framework",
  "scripts": {
    "init": "git submodule update --init --remote --merge --recursive",
    "sync-branches": "BRANCH=\"$(git rev-parse --abbrev-ref HEAD)\" git submodule foreach '([[ -n \"$(git branch --list $BRANCH)\" ]] || [[ -n \"$(git ls-remote --heads origin $BRANCH)\" ]]) && git checkout $BRANCH || git checkout master'",
    "do-install": "TOKEN=$(cat .token) npm install",
    "postinstall": "node ./bin/run-all.js npm run do-install",
    "reset": "rm -rf * && git checkout . && git pull && npm run do-install",
    "reset-build": "npm run reset && npm run build-all",
    "link-token": "node ./bin/npm-token.js",
    "set-dev": "TOKEN=$(cat .token) npm run set-to-latest && TOKEN=$(cat .token) npm run npm-link && npm run link-token",
    "test": "jest --coverage --detectOpenHandles",
    "test:unit": "node ./bin/run-all.js npm run test --if-present",
    "test:all": "node ./bin/run-all.js npm run test:all --if-present",
    "coverage": "npm run test && jest-coverage-badges --input \"./workdocs/coverage/coverage-summary.json\" --output \"./workdocs/badges\"",
    "build-all": "node ./bin/run-all.js npm run build",
    "build-all:prod": "node ./bin/run-all.js npm run build:prod",
    "npm-link": "node ./bin/npm-link.js --link",
    "npm-unlink": "node ./bin/npm-link.js --unlink",
    "set-to-latest": "npm run git-checkout && npm run git-pull",
    "git-checkout": "npm run git-all -- checkout master",
    "git-pull": "npm run git-all -- pull",
    "git-all": "npm run run-all -- git",
    "run-all": "node ./bin/run-all.js",
    "prepare-release": "",
    "release": "./bin/tag-release.sh",
    "bundle": "node ./bin/bundle.js",
    "clean-publish": "npx clean-publish",
    "drawings": "for FILE in workdocs/drawings/*.drawio; do echo \"converting $FILE to image...\" && docker run --rm -v $(pwd):/data rlespinasse/drawio-export --format png $FILE; done && cp -rf workdocs/drawings/export/* workdocs/resources/",
    "uml": "cd workdocs/uml && for FILE in ./*.puml; do docker run --rm -v $(pwd):/work -w /work miy4/plantuml -DPLANTUML_LIMIT_SIZE=8192 -tpng $FILE; done && cd ../.. && cp -fr workdocs/uml/*.png workdocs/resources/",
    "build:banner": "gs -dNOPAUSE -dBATCH -sDEVICE=png16m -r300 -sOutputFile=workdocs/resources/banner.png workdocs/illustrator/banner.ai",
    "build:cover": "gs -dNOPAUSE -dBATCH -sDEVICE=png16m -r300 -sOutputFile=workdocs/resources/cover.png workdocs/illustrator/cover.ai",
    "build:icon": "gs -dNOPAUSE -dBATCH -sDEVICE=png16m -r300 -sOutputFile=workdocs/resources/icon.png workdocs/illustrator/icon.ai",
    "docs": "npx rimraf ./docs && mkdir docs && npm install better-docs taffydb && gulp docs; npm remove better-docs taffydb",
    "compile-spec": "rimraf workdocs/confluence/modules/* && git submodule foreach 'cp -R ./workdocs/confluence ../workdocs/confluence/modules/$sm_path'",
    "publish-docs": "npm run compile-spec && sleep 2s && docker run -it --rm --user 1001:1001 -v \"$(pwd)/workdocs/confluence:/content\" -e ATLASSIAN_API_TOKEN=$(cat .confluence-token) ghcr.io/markdown-confluence/publish:latest"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/decaf-ts/decaf-ts.git"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "files": [
    "lib",
    "dist"
  ],
  "keywords": [
    "plantuml",
    "mermaid",
    "uml",
    "drawio",
    "mddocs",
    "md",
    "jsdoc",
    "doc",
    "docs",
    "documentation",
    "ci/cd",
    "ci",
    "cd",
    "template",
    "typescript",
    "ts"
  ],
  "author": "decaf-ts",
  "license": "LGPL-3.0-or-later",
  "bugs": {
    "url": "https://github.com/decaf-ts/decaf-ts/issues"
  },
  "homepage": "https://github.com/decaf-ts/decaf-ts#readme",
  "devDependencies": {
    "@eslint/js": "^9.25.1",
    "@rollup/plugin-commonjs": "^28.0.3",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/plugin-typescript": "^12.1.2",
    "@stylistic/eslint-plugin": "^4.2.0",
    "@types/jest": "^29.5.14",
    "clean-publish": "^5.1.0",
    "dpdm": "^3.14.0",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-prettier": "^5.2.6",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "jsdoc": "^4.0.4",
    "jsdoc-mermaid": "^1.0.0",
    "markdown-include": "^0.4.3",
    "minimist": "^1.2.8",
    "nodemon": "^3.1.9",
    "npm-check-updates": "^18.0.0",
    "prettier": "3.5.3",
    "rimraf": "^6.0.1",
    "rollup": "^4.40.0",
    "ts-jest": "^29.3.2",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.31.0"
  }
}
